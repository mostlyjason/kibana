[role="xpack"]
[[epm]]
== Elastic Package Manager

Elastic Package Manager (EPM) is part of the Ingest Manager app in Kibana. It allows you to quickly install packages for popular apps and services including assets for dashboards, saved searches, ingest pipelines and more. This allows you to quickly analyze and visualize data coming from those apps.

[float]
[[epm-configuration]]
=== Configuration

The Elastic Package Manager by default access `epr.elastic.co` to retrieve the package. The url can be configured with:

```
xpack.epm.registryUrl: 'http://localhost:8080'
```

[float]
[[epm-api]]
=== API

The Package Manager offers an API. The two simplest API endpoints are install and delete.
Here an example on how they can be used:

Install a package:

```
curl --user elastic:changeme localhost:5601/api/epm/install/iptables-1.0.4
curl --user elastic:changeme localhost:5601/api/epm/install/coredns-1.0.1
```

Delete a package:

```
curl --user elastic:changeme localhost:5601/api/epm/delete/iptables-1.0.4
curl --user elastic:changeme localhost:5601/api/epm/delete/coredns-1.0.1
```

[float]
[[epm-indexing]]
== Indexing Strategy

Ingest Management enforces an indexing strategy to allow the system to automically detect indices and run queries on it. In short the indexing strategy looks as following:

```
{type}-{namespace}-{dataset}
```

The `{type}` can be `logs` or `metrics`. The `{namespace}` is the part where the user can use free form. The only two requirement are that it has only characters allowed in an Elasticsearch index name and does NOT contain a `-`. The `dataset` is defined by the data that is indexed. The same requirements as for the namespace apply. It is expected that the fields for type, namespace and dataset are part of each event and are constant keywords.

Note: More `{type}`s might be added in the future like `apm` and `endpoint`.

This indexing strategy has a few advantages:

* Each index contains only the fields which are relevant for the dataset. This leads to more dense indices and better field completion.
* ILM policies can be applied per namespace per dataset.
* Rollups can be specified per namespace per dataset.
* Having the namespace user configurable makes setting security permissions possible.
* Having a global metrics and logs template, allows to create new indices on demand which still follow the convention. This is common in the case of k8s as an example.
* Constant keywords allow to narrow down the indices we need to access for querying very efficiently. This is especially relevant in environments which a large number of indices or with indices on slower nodes.

[float]
=== Templates & ILM Policies

To make the above strategy possible, alias templates are required. For each type there is a basic alias template with a default ILM policy. These default templates apply to all indices which follow the indexing strategy and do not have a more specific dataset alias template. 

The `metrics` and `logs` alias template contain all the basic fields from ECS.

Each type template contains an ILM policy. Modifying this default ILM policy will affect all data covered by the default templates.

[float]
=== Defaults

If the Elastic Agent is used to ingest data and only the type is specified, `default` for the namespace is used and `generic` for the dataset.
